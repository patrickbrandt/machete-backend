service: machete-backend
package:
  individually: true
provider:
  name: aws
  runtime: nodejs4.3
  profile: personal-account-admin
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - 'iot:DescribeEndpoint'
      Resource: "*"
    - Effect: "Allow"
      Action:
        - 'sts:AssumeRole'
      Resource: "*"
  environment:
    IOT_ROLE: machete-iot-1

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

functions:
  ping:
    handler: handler.ping
    events:
      - http:
          path: ping
          method: GET
          cors: true
  auth:
    handler: handler.auth
    events:
      - http:
          path: auth
          method: POST
          cors: true
  ripVine:
    handler: handler.ripVine
    events:
      - iot:
          sql: "SELECT * FROM '/machete/#'"
    package:
      include:
        - functions/ripVine/ffmpeg
        - functions/ripVine/lame
        - functions/ripVine/ffprobe # see if this binary and those that follow can be excluded
        - functions/ripVine/ffserver
        - functions/ripVine/x264


#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
